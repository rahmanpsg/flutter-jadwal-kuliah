// Mocks generated by Mockito 5.4.2 from annotations
// in jadwal_kuliah/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i9;

import 'package:flutter/material.dart' as _i6;
import 'package:jadwal_kuliah/models/dosen_model.dart' as _i17;
import 'package:jadwal_kuliah/models/fakultas_model.dart' as _i13;
import 'package:jadwal_kuliah/models/kelas_model.dart' as _i23;
import 'package:jadwal_kuliah/models/matakuliah_model.dart' as _i19;
import 'package:jadwal_kuliah/models/program_studi_model.dart' as _i15;
import 'package:jadwal_kuliah/models/ruangan_model.dart' as _i21;
import 'package:jadwal_kuliah/services/dosen_service.dart' as _i16;
import 'package:jadwal_kuliah/services/fakultas_service.dart' as _i12;
import 'package:jadwal_kuliah/services/kelas_service.dart' as _i22;
import 'package:jadwal_kuliah/services/matakuliah_service.dart' as _i18;
import 'package:jadwal_kuliah/services/pengampu_service.dart' as _i24;
import 'package:jadwal_kuliah/services/program_studi_service.dart' as _i14;
import 'package:jadwal_kuliah/services/ruangan_service.dart' as _i20;
import 'package:logger/src/logger.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked/stacked.dart' as _i2;
import 'package:stacked_services/src/bottom_sheet/bottom_sheet_service.dart'
    as _i7;
import 'package:stacked_services/src/dialog/dialog_service.dart' as _i10;
import 'package:stacked_services/src/models/overlay_request.dart' as _i11;
import 'package:stacked_services/src/models/overlay_response.dart' as _i8;
import 'package:stacked_services/src/navigation/router_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRootStackRouter_0 extends _i1.SmartFake
    implements _i2.RootStackRouter {
  _FakeRootStackRouter_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteData_1 extends _i1.SmartFake implements _i2.RouteData {
  _FakeRouteData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRoutingController_2 extends _i1.SmartFake
    implements _i2.RoutingController {
  _FakeRoutingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_3 extends _i1.SmartFake implements _i3.Logger {
  _FakeLogger_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RouterService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouterService extends _i1.Mock implements _i4.RouterService {
  @override
  _i2.RootStackRouter get router => (super.noSuchMethod(
        Invocation.getter(#router),
        returnValue: _FakeRootStackRouter_0(
          this,
          Invocation.getter(#router),
        ),
        returnValueForMissingStub: _FakeRootStackRouter_0(
          this,
          Invocation.getter(#router),
        ),
      ) as _i2.RootStackRouter);
  @override
  set router(_i2.RootStackRouter? _router) => super.noSuchMethod(
        Invocation.setter(
          #router,
          _router,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i2.StackedPage<dynamic>> get stack => (super.noSuchMethod(
        Invocation.getter(#stack),
        returnValue: <_i2.StackedPage<dynamic>>[],
        returnValueForMissingStub: <_i2.StackedPage<dynamic>>[],
      ) as List<_i2.StackedPage<dynamic>>);
  @override
  _i2.RouteData get topRoute => (super.noSuchMethod(
        Invocation.getter(#topRoute),
        returnValue: _FakeRouteData_1(
          this,
          Invocation.getter(#topRoute),
        ),
        returnValueForMissingStub: _FakeRouteData_1(
          this,
          Invocation.getter(#topRoute),
        ),
      ) as _i2.RouteData);
  @override
  dynamic setRouter(_i2.RootStackRouter? router) => super.noSuchMethod(
        Invocation.method(
          #setRouter,
          [router],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<dynamic> navigateTo(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<void> navigateToPath({
    required String? path,
    bool? includePrefixMatches = false,
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToPath,
          [],
          {
            #path: path,
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<T?> navigateWithTransition<T extends Object?>(
    _i6.Widget? widget, {
    _i6.RouteTransitionsBuilder? transitionBuilder,
    bool? fullscreenDialog = false,
    Duration? transitionDuration = const Duration(milliseconds: 300),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [widget],
          {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration,
          },
        ),
        returnValue: _i5.Future<T?>.value(),
        returnValueForMissingStub: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);
  @override
  _i5.Future<T?> replaceWith<T extends Object?>(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i5.Future<T?>.value(),
        returnValueForMissingStub: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);
  @override
  _i5.Future<void> clearStackAndShow(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> clearStackAndShowView(
    _i6.Widget? widget, {
    _i6.RouteTransitionsBuilder? transitionBuilder,
    bool? fullscreenDialog = false,
    Duration? transitionDuration = const Duration(milliseconds: 300),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [widget],
          {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void popForced<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #popForced,
          [result],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<bool> pop<T extends Object?>([T? result]) => (super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  void back<T extends Object?>({T? result}) => super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {#result: result},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.RoutingController topMostRouter({bool? ignorePagelessRoutes = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #topMostRouter,
          [],
          {#ignorePagelessRoutes: ignorePagelessRoutes},
        ),
        returnValue: _FakeRoutingController_2(
          this,
          Invocation.method(
            #topMostRouter,
            [],
            {#ignorePagelessRoutes: ignorePagelessRoutes},
          ),
        ),
        returnValueForMissingStub: _FakeRoutingController_2(
          this,
          Invocation.method(
            #topMostRouter,
            [],
            {#ignorePagelessRoutes: ignorePagelessRoutes},
          ),
        ),
      ) as _i2.RoutingController);
  @override
  _i5.Future<T?> pushNativeRoute<T extends Object?>(_i6.Route<T>? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNativeRoute,
          [route],
        ),
        returnValue: _i5.Future<T?>.value(),
        returnValueForMissingStub: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i7.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i7.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i8.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i5.Future<_i8.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i8.SheetResponse<dynamic>?>.value(),
      ) as _i5.Future<_i8.SheetResponse<dynamic>?>);
  @override
  _i5.Future<_i8.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i5.Future<_i8.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i8.SheetResponse<T>?>.value(),
      ) as _i5.Future<_i8.SheetResponse<T>?>);
  @override
  void completeSheet(_i8.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i10.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i10.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i6.Widget Function(
      _i6.BuildContext,
      _i11.DialogRequest<dynamic>,
      dynamic Function(_i8.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i8.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i9.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i9.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i10.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i8.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i8.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i8.DialogResponse<dynamic>?>);
  @override
  _i5.Future<_i8.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i8.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i8.DialogResponse<T>?>.value(),
      ) as _i5.Future<_i8.DialogResponse<T>?>);
  @override
  _i5.Future<_i8.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i9.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i9.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i10.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i8.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i8.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i8.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i8.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FakultasService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakultasService extends _i1.Mock implements _i12.FakultasService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i13.FakultasModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i13.FakultasModel>[],
        returnValueForMissingStub: <_i13.FakultasModel>[],
      ) as List<_i13.FakultasModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i13.FakultasModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue:
            _i5.Future<List<_i13.FakultasModel>>.value(<_i13.FakultasModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i13.FakultasModel>>.value(<_i13.FakultasModel>[]),
      ) as _i5.Future<List<_i13.FakultasModel>>);
  @override
  _i5.Future<void> save(_i13.FakultasModel? fakultas) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [fakultas],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i13.FakultasModel? fakultas) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [fakultas],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProgramStudiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProgramStudiService extends _i1.Mock
    implements _i14.ProgramStudiService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i15.ProgramStudiModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i15.ProgramStudiModel>[],
        returnValueForMissingStub: <_i15.ProgramStudiModel>[],
      ) as List<_i15.ProgramStudiModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i15.ProgramStudiModel? getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValueForMissingStub: null,
      ) as _i15.ProgramStudiModel?);
  @override
  _i5.Future<List<_i15.ProgramStudiModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue: _i5.Future<List<_i15.ProgramStudiModel>>.value(
            <_i15.ProgramStudiModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i15.ProgramStudiModel>>.value(
                <_i15.ProgramStudiModel>[]),
      ) as _i5.Future<List<_i15.ProgramStudiModel>>);
  @override
  _i5.Future<void> save(_i15.ProgramStudiModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i15.ProgramStudiModel? model) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DosenService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDosenService extends _i1.Mock implements _i16.DosenService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i17.DosenModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i17.DosenModel>[],
        returnValueForMissingStub: <_i17.DosenModel>[],
      ) as List<_i17.DosenModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i17.DosenModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue:
            _i5.Future<List<_i17.DosenModel>>.value(<_i17.DosenModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i17.DosenModel>>.value(<_i17.DosenModel>[]),
      ) as _i5.Future<List<_i17.DosenModel>>);
  @override
  _i5.Future<void> save(_i17.DosenModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i17.DosenModel? model) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MatakuliahService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatakuliahService extends _i1.Mock implements _i18.MatakuliahService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i19.MatakuliahModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i19.MatakuliahModel>[],
        returnValueForMissingStub: <_i19.MatakuliahModel>[],
      ) as List<_i19.MatakuliahModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i19.MatakuliahModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue: _i5.Future<List<_i19.MatakuliahModel>>.value(
            <_i19.MatakuliahModel>[]),
        returnValueForMissingStub: _i5.Future<List<_i19.MatakuliahModel>>.value(
            <_i19.MatakuliahModel>[]),
      ) as _i5.Future<List<_i19.MatakuliahModel>>);
  @override
  _i5.Future<void> save(_i19.MatakuliahModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i19.MatakuliahModel? model) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RuanganService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRuanganService extends _i1.Mock implements _i20.RuanganService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i21.RuanganModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i21.RuanganModel>[],
        returnValueForMissingStub: <_i21.RuanganModel>[],
      ) as List<_i21.RuanganModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i21.RuanganModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue:
            _i5.Future<List<_i21.RuanganModel>>.value(<_i21.RuanganModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i21.RuanganModel>>.value(<_i21.RuanganModel>[]),
      ) as _i5.Future<List<_i21.RuanganModel>>);
  @override
  _i5.Future<void> save(_i21.RuanganModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i21.RuanganModel? model) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [KelasService].
///
/// See the documentation for Mockito's code generation for more information.
class MockKelasService extends _i1.Mock implements _i22.KelasService {
  @override
  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
        returnValueForMissingStub: _FakeLogger_3(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);
  @override
  List<_i23.KelasModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i23.KelasModel>[],
        returnValueForMissingStub: <_i23.KelasModel>[],
      ) as List<_i23.KelasModel>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<void> syncData() => (super.noSuchMethod(
        Invocation.method(
          #syncData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<_i23.KelasModel>> gets() => (super.noSuchMethod(
        Invocation.method(
          #gets,
          [],
        ),
        returnValue:
            _i5.Future<List<_i23.KelasModel>>.value(<_i23.KelasModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i23.KelasModel>>.value(<_i23.KelasModel>[]),
      ) as _i5.Future<List<_i23.KelasModel>>);
  @override
  _i5.Future<void> save(_i23.KelasModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> delete(_i23.KelasModel? model) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PengampuService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPengampuService extends _i1.Mock implements _i24.PengampuService {}
